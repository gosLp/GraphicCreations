---
// src/pages/portfolio/[...slug].astro
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

// Generate static paths for all portfolio items
export async function getStaticPaths() {
    const portfolioEntries = await getCollection('portfolio');
    return portfolioEntries.map(entry => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

// Get the entry from props
const { entry } = Astro.props;
// Render the markdown content
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
    <Header />
    <main class="pt-24"> <!-- Added padding-top to account for fixed header -->
        <article class="container mx-auto px-4 max-w-4xl">
            {/* Hero section with main image */}
            <div class="relative h-96 rounded-xl overflow-hidden mb-8">
                <img 
                    src={entry.data.mainImage} 
                    alt={entry.data.title}
                    class="w-full h-full object-cover"
                />
            </div>

            {/* PDF Download Button - if PDF exists */}
            {entry.data.pdfUrl && (
                <div class="mb-8">
                <a 
                    href={entry.data.pdfUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                    <svg 
                    class="w-5 h-5 mr-2" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24"
                    >
                    <path 
                        stroke-linecap="round" 
                        stroke-linejoin="round" 
                        stroke-width="2" 
                        d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" 
                    />
                    </svg>
                    View Complete PDF
                </a>
                </div>
            )}

            {/* Content header */}
            <div class="mb-12">
                <div class="flex items-center gap-4 mb-4">
                    <span class="text-sm bg-indigo-100 text-indigo-700 px-3 py-1 rounded-full">
                        {entry.data.category}
                    </span>
                    <span class="text-gray-500">
                        {new Date(entry.data.publishDate).toLocaleDateString()}
                    </span>
                </div>
                <h1 class="text-4xl font-bold mb-4">{entry.data.title}</h1>
                <p class="text-xl text-gray-600 mb-4">{entry.data.description}</p>
                <p class="text-gray-600">Client: {entry.data.client}</p>
            </div>

            {/* Markdown content */}
            <div class="prose prose-lg max-w-none mb-16">
                <Content />
            </div>

            {/* Additional images gallery */}
            {entry.data.additionalImages && (
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-16">
                    {entry.data.additionalImages.map((image: string) => (
                        <div class="relative h-64 rounded-lg overflow-hidden">
                            <img 
                                src={image} 
                                alt={`Additional view of ${entry.data.title}`}
                                class="w-full h-full object-cover"
                            />
                        </div>
                    ))}
                </div>
            )}
        </article>
    </main>
    <Footer />
</Layout>

<style>
    /* Add styles for markdown content if needed */
    :global(.prose img) {
        @apply rounded-xl;
    }
</style>